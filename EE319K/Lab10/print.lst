


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             Variables, READWRITE, ALIGN=2
   18 00000000 00000000 
                       CounterA
                               DCD              0x0000
   19 00000004 00000000 
                       CounterB
                               DCD              0x0000
   20 00000008                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   21 00000000                 THUMB
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   26 00000000         ; Output a 32-bit number in unsigned decimal format
   27 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   28 00000000         ; Output: none
   29 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   30 00000000         LCD_OutDec
   31 00000000 B500            PUSH             {LR}
   32 00000002 4962            LDR              R1, =CounterA ;Add 1 to our cou
                                                            nter
   33 00000004 F04F 0C01       MOV              R12, #1
   34 00000008 F8C1 C000       STR              R12, [R1]   ;We start our count
                                                            er
   35 0000000C F04F 020A       MOV              R2, #10     ;Save our link regi
                                                            ster 
   36 00000010 F04F 0C0A       MOV              R12, #10
   37 00000014 FBB0 F3F2 
                       Div     UDIV             R3, R0, R2  ;We do R0/10^n to g
                                                            et remainder 
   38 00000018 1C1B            ADDS             R3, R3, #0
   39 0000001A D018            BEQ              Done        ;Check if we're in 
                                                            last digit 
   40 0000001C FB03 F302       MUL              R3, R3, R2
   41 00000020 EBA0 0303       SUB              R3, R0, R3
   42 00000024 EBA0 0003       SUB              R0, R0, R3



ARM Macro Assembler    Page 2 


   43 00000028 F04F 0C0A       MOV              R12, #10
   44 0000002C FBB2 FCFC       UDIV             R12, R2, R12
   45 00000030 FBB3 F3FC       UDIV             R3, R3, R12 ;We get the the act
                                                            ual digit 
   46 00000034 B408            PUSH{R3}                     ;Save it in the sta
                                                            ck
   47 00000036 4955            LDR              R1, =CounterA ;Add 1 to our cou
                                                            nter
   48 00000038 F8D1 C000       LDR              R12, [R1]
   49 0000003C F10C 0C01       ADD              R12, R12, #1
   50 00000040 F8C1 C000       STR              R12, [R1]
   51 00000044 F04F 0C0A       MOV              R12, #10
   52 00000048 FB02 F20C       MUL              R2, R12
   53 0000004C E7E2            B                Div
   54 0000004E FBB2 F3FC 
                       Done    UDIV             R3, R2, R12
   55 00000052 FBB0 F0F3       UDIV             R0, R0, R3
   56 00000056 B401            PUSH             {R0}        ;Get the last digit
                                                             and push it into s
                                                            tack
   57 00000058 BC01    Rep     POP{R0}
   58 0000005A F100 0030       ADD              R0, R0, #0x30 ;Get the ASCII va
                                                            lue of our number 
   59 0000005E F7FF FFFE       BL               ST7735_OutChar ;Output the char
                                                            acter
   60 00000062 494A            LDR              R1, =CounterA 
                                                            ;Check the counter
   61 00000064 F8D1 C000       LDR              R12, [R1]
   62 00000068 F1BC 0C01       SUBS             R12, R12, #1
   63 0000006C F8C1 C000       STR              R12, [R1]
   64 00000070 D1F2            BNE              Rep         ;Loop back for more
                                                             digits
   65 00000072 F04F 0020       MOV              R0, #0x20
   66 00000076 F7FF FFFE       BL               ST7735_OutChar
   67 0000007A F85D EB04       POP              {LR}
   68 0000007E 4770            BX               LR
   69 00000080         
   70 00000080         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   71 00000080         
   72 00000080         ; -----------------------LCD _OutFix--------------------
                       --
   73 00000080         ; Output characters to LCD display in fixed-point format
                       
   74 00000080         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   75 00000080         ; Inputs:  R0 is an unsigned 32-bit number
   76 00000080         ; Outputs: none
   77 00000080         ; E.g., R0=0,    then output "0.000 "
   78 00000080         ;       R0=3,    then output "0.003 "
   79 00000080         ;       R0=89,   then output "0.089 "
   80 00000080         ;       R0=123,  then output "0.123 "
   81 00000080         ;       R0=9999, then output "9.999 "
   82 00000080         ;       R0>9999, then output "*.*** "
   83 00000080         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   84 00000080         LCD_OutFix
   85 00000080         
   86 00000080 B500            PUSH             {LR}
   87 00000082         ;We check for R0>9999



ARM Macro Assembler    Page 3 


   88 00000082 F04F 0109       MOV              R1, #9
   89 00000086 F240 4257       MOV              R2, #1111
   90 0000008A FB02 F101       MUL              R1, R2, R1
   91 0000008E 4288            CMP              R0, R1
   92 00000090 D854            BHI              TooLarge
   93 00000092         
   94 00000092         ;Start our counter and registers 
   95 00000092 493F            LDR              R1, =CounterB ;Add 1 to our cou
                                                            nter
   96 00000094 F04F 0C01       MOV              R12, #1
   97 00000098 F8C1 C000       STR              R12, [R1]   ;We start our count
                                                            er
   98 0000009C F04F 020A       MOV              R2, #10
   99 000000A0 F04F 0C0A       MOV              R12, #10
  100 000000A4         
  101 000000A4         ;Get the digits for our number
  102 000000A4 FBB0 F3F2 
                       DivB    UDIV             R3, R0, R2  ;We do R0/10^n to g
                                                            et remainder 
  103 000000A8 1C1B            ADDS             R3, R3, #0
  104 000000AA D018            BEQ              DoneB       ;Check if we're in 
                                                            last digit 
  105 000000AC FB03 F302       MUL              R3, R3, R2
  106 000000B0 EBA0 0303       SUB              R3, R0, R3
  107 000000B4 EBA0 0003       SUB              R0, R0, R3
  108 000000B8 F04F 0C0A       MOV              R12, #10
  109 000000BC FBB2 FCFC       UDIV             R12, R2, R12
  110 000000C0 FBB3 F3FC       UDIV             R3, R3, R12 ;We get the the act
                                                            ual digit 
  111 000000C4 B408            PUSH{R3}                     ;Save it in the sta
                                                            ck
  112 000000C6 4932            LDR              R1, =CounterB ;Add 1 to our cou
                                                            nter
  113 000000C8 F8D1 C000       LDR              R12, [R1]
  114 000000CC F10C 0C01       ADD              R12, R12, #1
  115 000000D0 F8C1 C000       STR              R12, [R1]
  116 000000D4 F04F 0C0A       MOV              R12, #10
  117 000000D8 FB02 F20C       MUL              R2, R12
  118 000000DC E7E2            B                DivB
  119 000000DE FBB2 F3FC 
                       DoneB   UDIV             R3, R2, R12
  120 000000E2 FBB0 F0F3       UDIV             R0, R0, R3
  121 000000E6 B401            PUSH             {R0}        ;Get the last digit
                                                             and push it into s
                                                            tack
  122 000000E8         
  123 000000E8         ;We print our number
  124 000000E8         ;Calculate how many zeroes we have
  125 000000E8 4B29            LDR              R3, =CounterB
  126 000000EA 6819            LDR              R1, [R3]
  127 000000EC F04F 0304       MOV              R3, #4      ;Number of digits 
  128 000000F0 F04F 0200       MOV              R2, #0
  129 000000F4 1A5B            SUBS             R3, R3, R1
  130 000000F6 D00B    Check   BEQ              RepB
  131 000000F8 F04F 0030       MOV              R0, #0x30
  132 000000FC B40D            PUSH             {R0, R3, R2}
  133 000000FE F7FF FFFE       BL               ST7735_OutChar ;Output a 0
  134 00000102 BC0D            POP              {R0, R3, R2}
  135 00000104 F102 0201       ADD              R2, #1



ARM Macro Assembler    Page 4 


  136 00000108 2A01            CMP              R2, #1
  137 0000010A D030            BEQ              DotA
  138 0000010C 1E5B    Return  SUBS             R3, R3, #1
  139 0000010E E7F2            B                Check
  140 00000110         
  141 00000110         ;Print our digits  
  142 00000110 BC01    RepB    POP{R0}
  143 00000112 F100 0030       ADD              R0, R0, #0x30 ;Get the ASCII va
                                                            lue of our number 
  144 00000116 B40D            PUSH             {R0, R3, R2}
  145 00000118 F7FF FFFE       BL               ST7735_OutChar ;Output the char
                                                            acter
  146 0000011C BC0D            POP              {R0, R3, R2}
  147 0000011E F102 0201       ADD              R2, #1
  148 00000122 2A01            CMP              R2, #1
  149 00000124 D02A            BEQ              DotB
  150 00000126 491A    Cont    LDR              R1, =CounterB 
                                                            ;Check the counter
  151 00000128 F8D1 C000       LDR              R12, [R1]
  152 0000012C F1BC 0C01       SUBS             R12, R12, #1
  153 00000130 F8C1 C000       STR              R12, [R1]
  154 00000134 D1EC            BNE              RepB        ;Loop back for more
                                                             digits
  155 00000136 F85D EB04       POP              {LR}
  156 0000013A 4770    Leave   BX               LR
  157 0000013C         
  158 0000013C         TooLarge
  159 0000013C F04F 002A       MOV              R0, #0x2A
  160 00000140 F7FF FFFE       BL               ST7735_OutChar
  161 00000144 F04F 002E       MOV              R0, #0x2E
  162 00000148 F7FF FFFE       BL               ST7735_OutChar
  163 0000014C F04F 002A       MOV              R0, #0x2A
  164 00000150 F7FF FFFE       BL               ST7735_OutChar
  165 00000154 F04F 002A       MOV              R0, #0x2A
  166 00000158 F7FF FFFE       BL               ST7735_OutChar
  167 0000015C F04F 002A       MOV              R0, #0x2A
  168 00000160 F7FF FFFE       BL               ST7735_OutChar
  169 00000164 F04F 002A       MOV              R0, #0x2A
  170 00000168 F85D EB04       POP              {LR}
  171 0000016C 4770            BX               LR
  172 0000016E         DotA
  173 0000016E F04F 002E       MOV              R0, #0x2E
  174 00000172 B40D            PUSH             {R0, R3, R2}
  175 00000174 F7FF FFFE       BL               ST7735_OutChar ;Output the char
                                                            acter
  176 00000178 BC0D            POP              {R0, R3, R2}
  177 0000017A E7C7            B                Return
  178 0000017C         DotB
  179 0000017C F04F 002E       MOV              R0, #0x2E
  180 00000180 B40D            PUSH             {R0, R3, R2}
  181 00000182 F7FF FFFE       BL               ST7735_OutChar ;Output the char
                                                            acter
  182 00000186 BC0D            POP              {R0, R3, R2}
  183 00000188 E7CD            B                Cont
  184 0000018A         
  185 0000018A         ALIGN
  186 0000018A         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  187 0000018A         
  188 0000018A 00 00           ALIGN                        ; make sure the end



ARM Macro Assembler    Page 5 


                                                             of this section is
                                                             aligned
  189 0000018C                 END                          ; end of file
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__MICROLIB SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CounterA 00000000

Symbol: CounterA
   Definitions
      At line 18 in file Print.s
   Uses
      At line 32 in file Print.s
      At line 47 in file Print.s
      At line 60 in file Print.s

CounterB 00000004

Symbol: CounterB
   Definitions
      At line 19 in file Print.s
   Uses
      At line 95 in file Print.s
      At line 112 in file Print.s
      At line 125 in file Print.s
      At line 150 in file Print.s

Variables 00000000

Symbol: Variables
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: Variables unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 20 in file Print.s
   Uses
      None
Comment: .text unused
ALIGN 0000018A

Symbol: ALIGN
   Definitions
      At line 185 in file Print.s
   Uses
      None
Comment: ALIGN unused
Check 000000F6

Symbol: Check
   Definitions
      At line 130 in file Print.s
   Uses
      At line 139 in file Print.s
Comment: Check used once
Cont 00000126

Symbol: Cont
   Definitions
      At line 150 in file Print.s
   Uses
      At line 183 in file Print.s
Comment: Cont used once
Div 00000014

Symbol: Div
   Definitions
      At line 37 in file Print.s
   Uses
      At line 53 in file Print.s
Comment: Div used once
DivB 000000A4

Symbol: DivB
   Definitions
      At line 102 in file Print.s
   Uses
      At line 118 in file Print.s
Comment: DivB used once
Done 0000004E

Symbol: Done
   Definitions
      At line 54 in file Print.s
   Uses
      At line 39 in file Print.s
Comment: Done used once
DoneB 000000DE

Symbol: DoneB



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 119 in file Print.s
   Uses
      At line 104 in file Print.s
Comment: DoneB used once
DotA 0000016E

Symbol: DotA
   Definitions
      At line 172 in file Print.s
   Uses
      At line 137 in file Print.s
Comment: DotA used once
DotB 0000017C

Symbol: DotB
   Definitions
      At line 178 in file Print.s
   Uses
      At line 149 in file Print.s
Comment: DotB used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000080

Symbol: LCD_OutFix
   Definitions
      At line 84 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
Leave 0000013A

Symbol: Leave
   Definitions
      At line 156 in file Print.s
   Uses
      None
Comment: Leave unused
Rep 00000058

Symbol: Rep
   Definitions
      At line 57 in file Print.s
   Uses
      At line 64 in file Print.s
Comment: Rep used once
RepB 00000110

Symbol: RepB
   Definitions
      At line 142 in file Print.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 130 in file Print.s
      At line 154 in file Print.s

Return 0000010C

Symbol: Return
   Definitions
      At line 138 in file Print.s
   Uses
      At line 177 in file Print.s
Comment: Return used once
TooLarge 0000013C

Symbol: TooLarge
   Definitions
      At line 158 in file Print.s
   Uses
      At line 92 in file Print.s
Comment: TooLarge used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 59 in file Print.s
      At line 66 in file Print.s
      At line 133 in file Print.s
      At line 145 in file Print.s
      At line 160 in file Print.s
      At line 162 in file Print.s
      At line 164 in file Print.s
      At line 166 in file Print.s
      At line 168 in file Print.s
      At line 175 in file Print.s
      At line 181 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
355 symbols in table
