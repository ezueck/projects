


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Eduardo Zueck Garces and Mai Phan
    3 00000000         ; Date Created: 3/1/2015 
    4 00000000         ; Last Modified: 3/2/2015 
    5 00000000         ; Section 11am-12pm     TA: Wooseok Lee
    6 00000000         ; Lab number: 4
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with four changes:
   13 00000000         ;1-  activate the PLL to run at 80 MHz (12.5ns bus cycle
                        time) 
   14 00000000         ;2-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;3-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;4-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE1 an output and make PE0 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE1 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000         
   25 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   26 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   27 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   28 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   29 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 2 


                               EQU              0x4002451C
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   40 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   41 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   42 00000000                 THUMB
   43 00000000                 AREA             DATA, ALIGN=4
   44 00000000 00000032 
                       SIZE    EQU              50
   45 00000000         ;You MUST use these two buffers and two variables
   46 00000000         ;You MUST not change their names
   47 00000000         ;These names MUST be exported
   48 00000000                 EXPORT           DataBuffer
   49 00000000                 EXPORT           TimeBuffer
   50 00000000                 EXPORT           DataPt [DATA,SIZE=4]
   51 00000000                 EXPORT           TimePt [DATA,SIZE=4]
   52 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   53 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   54 00000190 00 00 00 
              00       DataPt  SPACE            4
   55 00000194 00 00 00 
              00       TimePt  SPACE            4
   56 00000198         
   57 00000198                 ALIGN
   58 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2



ARM Macro Assembler    Page 5 


   59 00000000                 THUMB
   60 00000000                 EXPORT           Start
   61 00000000                 IMPORT           TExaS_Init
   62 00000000         
   63 00000000         
   64 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   65 00000004 F000 F863       BL               PortInitE
   66 00000008 F000 F878       BL               PortInitF
   67 0000000C F000 F812       BL               Debug_Init
   68 00000010 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   69 00000012         
   70 00000012 F000 F837 
                       loop    BL               Debug_Capture
   71 00000016 F000 F89D       BL               Heartbeat
   72 0000001A F000 F886       BL               Delay
   73 0000001E         
   74 0000001E         ;We check the state of the switch PF4
   75 0000001E 4850            LDR              R0, =GPIO_PORTE_DATA_R
   76 00000020 6801            LDR              R1, [R0]
   77 00000022 F011 0201       ANDS             R2, R1, #0x01
   78 00000026         
   79 00000026         ;SwitchToggle if PF4 is 0 
   80 00000026 D002            BEQ              SwitchOn
   81 00000028 F000 F88E       BL               Toggle
   82 0000002C E7F1            B                loop
   83 0000002E         SwitchOn
   84 0000002E F000 F885       BL               TurnOn
   85 00000032         
   86 00000032 E7EE            B                loop
   87 00000034         
   88 00000034         
   89 00000034         ;------------Debug_Init------------
   90 00000034         ; Initializes the debugging instrument
   91 00000034         ; Input: none
   92 00000034         ; Output: none
   93 00000034         ; Modifies: none
   94 00000034         ; Note: push/pop an even number of registers so C compil
                       er is happy
   95 00000034         Debug_Init
   96 00000034 B40F            PUSH{R0-R3}
   97 00000036         ;Array Init
   98 00000036 484B            LDR              R0, =DataBuffer
   99 00000038 494B            LDR              R1, =TimeBuffer
  100 0000003A 4A4C            LDR              R2, =DataPt
  101 0000003C 4B4C            LDR              R3, =TimePt
  102 0000003E 6010            STR              R0, [R2]    ; We initialize our
                                                             pointers 
  103 00000040 6019            STR              R1, [R3]
  104 00000042 F04F 32FF       LDR              R2, =0xFFFFFFFF
  105 00000046 F04F 0332       MOV              R3, #50
  106 0000004A 6002    Erase   STR              R2, [R0]    ;We write xFFF... i
                                                            n both of our array
                                                            s 
  107 0000004C 600A            STR              R2, [R1]



ARM Macro Assembler    Page 6 


  108 0000004E F101 0104       ADD              R1, #4
  109 00000052 F100 0004       ADD              R0, #4
  110 00000056 3B01            SUBS             R3, #1
  111 00000058 D1F7            BNE              Erase
  112 0000005A 4842            LDR              R0, =DataBuffer
  113 0000005C 4942            LDR              R1, =TimeBuffer
  114 0000005E 4A43            LDR              R2, =DataPt
  115 00000060 4B43            LDR              R3, =TimePt
  116 00000062 6010            STR              R0, [R2]
  117 00000064 6019            STR              R1, [R3]
  118 00000066         
  119 00000066         ;Systick Init
  120 00000066 4843            LDR              R0, =NVIC_ST_CTRL_R
  121 00000068 F04F 0100       MOV              R1, #0
  122 0000006C 6001            STR              R1, [R0]
  123 0000006E         
  124 0000006E 4842            LDR              R0, =NVIC_ST_RELOAD_R
  125 00000070 4942            LDR              R1, =0x00FFFFFF
  126 00000072 6001            STR              R1, [R0]
  127 00000074         
  128 00000074 4842            LDR              R0, =NVIC_ST_CURRENT_R
  129 00000076 6001            STR              R1, [R0]
  130 00000078         
  131 00000078 483E            LDR              R0, =NVIC_ST_CTRL_R
  132 0000007A F04F 0105       MOV              R1, #0x05
  133 0000007E 6001            STR              R1, [R0]
  134 00000080         
  135 00000080 BC0F            POP{R0-R3}
  136 00000082 4770            BX               LR
  137 00000084         
  138 00000084         ;------------Debug_Capture------------
  139 00000084         ; Dump Port E and time into buffers
  140 00000084         ; Input: none
  141 00000084         ; Output: none
  142 00000084         ; Modifies: none
  143 00000084         ; Note: push/pop an even number of registers so C compil
                       er is happy
  144 00000084         Debug_Capture
  145 00000084 B4FF            PUSH{R0-R7}
  146 00000086         ;Check if array is full
  147 00000086 4839            LDR              R0, =DataPt
  148 00000088 6801            LDR              R1, [R0]
  149 0000008A 680A            LDR              R2, [R1]
  150 0000008C F04F 33FF       LDR              R3, =0xFFFFFFFF
  151 00000090 1AD2            SUBS             R2, R3
  152 00000092 D11A            BNE              Leave
  153 00000094         
  154 00000094         ;Dump - Get Systick Data
  155 00000094 483A            LDR              R0, =NVIC_ST_CURRENT_R
  156 00000096 6801            LDR              R1, [R0]
  157 00000098         
  158 00000098         ;Get PortE Data and Mask 
  159 00000098 4831            LDR              R0, =GPIO_PORTE_DATA_R
  160 0000009A 6802            LDR              R2, [R0]
  161 0000009C F102 0300       ADD              R3, R2, #0
  162 000000A0 F002 0201       AND              R2, #0x01
  163 000000A4 EA4F 1202       LSL              R2, #4
  164 000000A8 F003 0302       AND              R3, #0x02
  165 000000AC EA4F 0353       LSR              R3, #1



ARM Macro Assembler    Page 7 


  166 000000B0 441A            ADD              R2, R2, R3
  167 000000B2         
  168 000000B2         ;Store Data 
  169 000000B2 482E            LDR              R0, =DataPt
  170 000000B4 4F2E            LDR              R7, =TimePt
  171 000000B6 6805            LDR              R5, [R0]
  172 000000B8 683E            LDR              R6, [R7]
  173 000000BA 602A            STR              R2, [R5]
  174 000000BC 6031            STR              R1, [R6]
  175 000000BE         
  176 000000BE         ;Increment pointers
  177 000000BE F105 0504       ADD              R5, #4
  178 000000C2 F106 0604       ADD              R6, #4
  179 000000C6 6005            STR              R5, [R0]
  180 000000C8 603E            STR              R6, [R7]
  181 000000CA         
  182 000000CA BCFF    Leave   POP{R0-R7}
  183 000000CC 4770            BX               LR
  184 000000CE         
  185 000000CE         ;**********Initialization Sequence***********
  186 000000CE         PortInitE
  187 000000CE         ;Initialize the Clock for Port E
  188 000000CE 492D            LDR              R1, =SYSCTL_RCGCGPIO_R ;Load th
                                                            e clock location
  189 000000D0 6808            LDR              R0, [R1]    ;Load the clock set
                                                            ting  
  190 000000D2 F040 0010       ORR              R0, R0, #0x10 ;Activate Port E
  191 000000D6 6008            STR              R0, [R1]
  192 000000D8         
  193 000000D8         ;Wait two cycles 
  194 000000D8 BF00            NOP
  195 000000DA BF00            NOP
  196 000000DC         
  197 000000DC         ;Set inputs and outpurs in the direction register
  198 000000DC 492A            LDR              R1, =GPIO_PORTE_DIR_R ;Load the
                                                             DIR location
  199 000000DE 6808            LDR              R0, [R1]    ;Load the DIR setti
                                                            ng for PortE   ;
  200 000000E0 F04F 0002       MOV              R0, #0x02   ;Set PE1 as output
  201 000000E4 6008            STR              R0, [R1]    ;Store the DIR sett
                                                            ing
  202 000000E6         
  203 000000E6         
  204 000000E6         ;Disable alternate functions
  205 000000E6 4929            LDR              R1, =GPIO_PORTE_AFSEL_R ;Load A
                                                            FSEL location
  206 000000E8 6808            LDR              R0, [R1]
  207 000000EA F020 00FF       BIC              R0, R0, #0xFF ;Disable the func
                                                            tions
  208 000000EE 6008            STR              R0, [R1]
  209 000000F0         
  210 000000F0         ;Enable the digital port
  211 000000F0 4927            LDR              R1, =GPIO_PORTE_DEN_R
  212 000000F2 6808            LDR              R0, [R1]
  213 000000F4 F04F 00FF       MOV              R0, #0xFF
  214 000000F8 6008            STR              R0, [R1]
  215 000000FA         
  216 000000FA         ;Go back
  217 000000FA 4770            BX               LR



ARM Macro Assembler    Page 8 


  218 000000FC         
  219 000000FC         ;**********Initialization Sequence PortF***********
  220 000000FC         PortInitF
  221 000000FC         ;Initialize the Clock for Port F
  222 000000FC 4921            LDR              R1, =SYSCTL_RCGCGPIO_R ;Load th
                                                            e clock location
  223 000000FE 6808            LDR              R0, [R1]    ;Load the clock set
                                                            ting  
  224 00000100 F040 0020       ORR              R0, R0, #0x20 ;Activate Port E
  225 00000104 6008            STR              R0, [R1]
  226 00000106         
  227 00000106         ;Wait two cycles 
  228 00000106 BF00            NOP
  229 00000108 BF00            NOP
  230 0000010A         
  231 0000010A         ;Set inputs and outpurs in the direction register
  232 0000010A 4922            LDR              R1, =GPIO_PORTF_DIR_R ;Load the
                                                             DIR location
  233 0000010C 6808            LDR              R0, [R1]    ;Load the DIR setti
                                                            ng for PortE   ;
  234 0000010E F04F 0004       MOV              R0, #0x04   ;Set PF2as output
  235 00000112 6008            STR              R0, [R1]    ;Store the DIR sett
                                                            ing
  236 00000114         
  237 00000114         
  238 00000114         ;Disable alternate functions
  239 00000114 4920            LDR              R1, =GPIO_PORTF_AFSEL_R ;Load A
                                                            FSEL location
  240 00000116 6808            LDR              R0, [R1]
  241 00000118 F020 00FF       BIC              R0, R0, #0xFF ;Disable the func
                                                            tions
  242 0000011C 6008            STR              R0, [R1]
  243 0000011E         
  244 0000011E         ;Enable the digital port
  245 0000011E 491F            LDR              R1, =GPIO_PORTF_DEN_R
  246 00000120 6808            LDR              R0, [R1]
  247 00000122 F04F 00FF       MOV              R0, #0xFF
  248 00000126 6008            STR              R0, [R1]
  249 00000128         
  250 00000128         ;Go back
  251 00000128 4770            BX               LR
  252 0000012A         
  253 0000012A         ;************Delay Subroutine for 8HZ ***************
  254 0000012A         Delay
  255 0000012A F644 6020       MOV              R0, #20000  ;This gives a 1 ms 
                                                            delay
  256 0000012E F04F 013E       MOV              R1, #62     ;Number of ms we wa
                                                            nt 
  257 00000132 FB00 F001       MUL              R0, R0, R1
  258 00000136         Repeat
  259 00000136 1E40            SUBS             R0, R0, #1
  260 00000138 D1FD            BNE              Repeat
  261 0000013A 4770            BX               LR
  262 0000013C         
  263 0000013C         ;************Turn on the switch*************
  264 0000013C         TurnOn
  265 0000013C 4808            LDR              R0, =GPIO_PORTE_DATA_R
  266 0000013E 6801            LDR              R1, [R0]
  267 00000140 F041 0102       ORR              R1, R1, #0x02



ARM Macro Assembler    Page 9 


  268 00000144 6001            STR              R1, [R0]
  269 00000146 4770            BX               LR
  270 00000148         
  271 00000148         ;************Toggle the switch************
  272 00000148         Toggle
  273 00000148 4805            LDR              R0, =GPIO_PORTE_DATA_R
  274 0000014A 6801            LDR              R1, [R0]
  275 0000014C F081 0102       EOR              R1, R1, #0x02
  276 00000150 6001            STR              R1, [R0]
  277 00000152 4770            BX               LR
  278 00000154         
  279 00000154         ;************Heartbeat************
  280 00000154         Heartbeat
  281 00000154 4812            LDR              R0, =GPIO_PORTF_DATA_R
  282 00000156 6801            LDR              R1, [R0]
  283 00000158 F081 0104       EOR              R1, R1, #0x04
  284 0000015C 6001            STR              R1, [R0]
  285 0000015E 4770            BX               LR
  286 00000160         
  287 00000160         
  288 00000160                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  289 00000160                 END                          ; end of file
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E010 
              E000E014 
              00FFFFFF 
              E000E018 
              400FE608 
              40024400 
              40024420 
              4002451C 
              40025400 
              40025420 
              4002551C 
              400253FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 52 in file main.s
   Uses
      At line 48 in file main.s
      At line 98 in file main.s
      At line 112 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 54 in file main.s
   Uses
      At line 50 in file main.s
      At line 100 in file main.s
      At line 114 in file main.s
      At line 147 in file main.s
      At line 169 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 53 in file main.s
   Uses
      At line 49 in file main.s
      At line 99 in file main.s
      At line 113 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 55 in file main.s
   Uses
      At line 51 in file main.s
      At line 101 in file main.s
      At line 115 in file main.s
      At line 170 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 58 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 00000084

Symbol: Debug_Capture
   Definitions
      At line 144 in file main.s
   Uses
      At line 70 in file main.s
Comment: Debug_Capture used once
Debug_Init 00000034

Symbol: Debug_Init
   Definitions
      At line 95 in file main.s
   Uses
      At line 67 in file main.s
Comment: Debug_Init used once
Delay 0000012A

Symbol: Delay
   Definitions
      At line 254 in file main.s
   Uses
      At line 72 in file main.s
Comment: Delay used once
Erase 0000004A

Symbol: Erase
   Definitions
      At line 106 in file main.s
   Uses
      At line 111 in file main.s
Comment: Erase used once
Heartbeat 00000154

Symbol: Heartbeat
   Definitions
      At line 280 in file main.s
   Uses
      At line 71 in file main.s
Comment: Heartbeat used once
Leave 000000CA

Symbol: Leave
   Definitions
      At line 182 in file main.s
   Uses
      At line 152 in file main.s
Comment: Leave used once
PortInitE 000000CE

Symbol: PortInitE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 186 in file main.s
   Uses
      At line 65 in file main.s
Comment: PortInitE used once
PortInitF 000000FC

Symbol: PortInitF
   Definitions
      At line 220 in file main.s
   Uses
      At line 66 in file main.s
Comment: PortInitF used once
Repeat 00000136

Symbol: Repeat
   Definitions
      At line 258 in file main.s
   Uses
      At line 260 in file main.s
Comment: Repeat used once
Start 00000000

Symbol: Start
   Definitions
      At line 64 in file main.s
   Uses
      At line 60 in file main.s
Comment: Start used once
SwitchOn 0000002E

Symbol: SwitchOn
   Definitions
      At line 83 in file main.s
   Uses
      At line 80 in file main.s
Comment: SwitchOn used once
Toggle 00000148

Symbol: Toggle
   Definitions
      At line 272 in file main.s
   Uses
      At line 81 in file main.s
Comment: Toggle used once
TurnOn 0000013C

Symbol: TurnOn
   Definitions
      At line 264 in file main.s
   Uses
      At line 84 in file main.s
Comment: TurnOn used once
loop 00000012

Symbol: loop
   Definitions
      At line 70 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 82 in file main.s
      At line 86 in file main.s

15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 205 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 75 in file main.s
      At line 159 in file main.s
      At line 265 in file main.s
      At line 273 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 211 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 198 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 239 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 281 in file main.s
Comment: GPIO_PORTF_DATA_R used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 245 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 232 in file main.s
Comment: GPIO_PORTF_DIR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: LED unused
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 120 in file main.s
      At line 131 in file main.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 128 in file main.s
      At line 155 in file main.s

NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 124 in file main.s
Comment: NVIC_ST_RELOAD_R used once
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 44 in file main.s
   Uses
      At line 52 in file main.s
      At line 53 in file main.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

SWITCH 40024004

Symbol: SWITCH
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: SWITCH unused
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 188 in file main.s
      At line 222 in file main.s

18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 64 in file main.s
Comment: TExaS_Init used once
1 symbol
372 symbols in table
